# Build and upload *.jar to release When tag v*.*.*

name: Release Build

on:
  push:
    tags:
      - "v*.*.*"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Zip site
      run: |
        zip -r target.zip target/*.jar
    - name: Use last commit message as a body of new release
      id: read_release
      shell: bash
      run: |
        r=$(git log -1 --pretty=%B | cat)                 # <--- Get last commit message
        r="${r//'%'/'%25'}"                               # Multiline escape sequences for %
        r="${r//$'\n'/'%0A'}"                             # Multiline escape sequences for '\n'
        r="${r//$'\r'/'%0D'}"                             # Multiline escape sequences for '\r'
        echo "{RELEASE_BODY}={$r}" >> $GITHUB_OUTPUT      # <--- Set environment variable
    - name: Upload build result to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target.zip
        asset_name: target_$tag.zip
        tag: ${{ github.ref }}
        overwrite: true
        body: |
          ${{ steps.read_release.outputs.RELEASE_BODY }} 
            
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
